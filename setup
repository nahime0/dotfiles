#!/usr/bin/env zsh

################################################################################
# Setup needed variables and env                                               #
#                                                                              #
# 1. The directory of the script                                               #
# 2. The path of the gum binary                                                #
#                                                                              #
# Then this script will take care of installing the needed fonts, and the      #
# needed software and tools.                                                   #
################################################################################


export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
export GUM=$DIR/bin/pkgx/gum/gum

######################################################
# Import lib/oses.sh    Â                             #
# which contains the functions for detecting the OS  #
######################################################
source $DIR/lib/oses.sh

if isOther; then
    $GUM style --padding "0 2" "This script is only for macOS and Linux systems."
    exit 1
fi

if isMacOS; then
    $DIR/installers/xcode-command-line-tools.sh
fi
$DIR/installers/pkgx.sh


if isLinux || isWSL; then
    $GUM style --padding "0 2" "Installing make tools and zsh shell"
    sudo apt install g++ gcc make zsh
    chsh -s $(which zsh)
fi

$GUM style --border normal --padding "0 4" --border-foreground 212 "pkgx and other needed dependencies are installed."

if ! $GUM confirm "Continue with the installation?" ; then
    $GUM style --padding "0 2" "Installation aborted."
    exit 1
fi

if isMacOS; then
    $DIR/installers/fonts.sh
else
    $GUM style --padding "0 2" "Skipping fonts installation for non-macOS systems. Install the fonts manually."
    $GUM input --placeholder="Press any key to continue..."
fi

$DIR/installers/folders.sh
$DIR/installers/oh-my-zsh.sh

if isMacOS; then
    $DIR/installers/kitty.sh
fi

$DIR/installers/dotfiles.sh
$DIR/installers/binaries.sh
$DIR/installers/pkgx-symlinks.sh
$DIR/installers/pkgx-force-download.sh

############################
# Other software and tools #
############################

$DIR/installers/ranger.sh

##################################################################
# If the private dotfiles repo exists, then run the setup script #
##################################################################
if [ -f $DIR/dotfiles-private/setup ] ; then
    $GUM style --padding "0 2" "Setting up private dotfiles..."
    $DIR/dotfiles-private/setup
fi
