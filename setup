#!/usr/bin/env bash

# Retrieve the directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

################################################
# Ensure that command line tools are installed #
################################################

# Xcode command line tools
if ! xcode-select -p &> /dev/null; then
    echo "Xcode command line tools not found. Installing..."
    echo "Re run this script after the installation is complete."
    xcode-select --install
    exit 1
fi

#######################################
# Install oh-my-zsh, if not installed #
#######################################

if [ ! -d $HOME/.oh-my-zsh ]; then
    echo "oh-my-zsh not found. Installing..."
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

##################
# Private stuff  #
##################

# SSH config file
mkdir -p $HOME/.ssh/
rm -rf $HOME/.ssh/config
ln -s $DIR/ssh/config.conf $HOME/.ssh/config

# Git
rm -rf $HOME/.gitconfig
rm -rf $HOME/.gitconfig-netsons
rm -rf $HOME/.gitconfig-vuppi
rm -rf $HOME/.gitignore
ln -s $DIR/git/gitconfig $HOME/.gitconfig
ln -s $DIR/git/gitconfig-netsons $HOME/.gitconfig-netsons
ln -s $DIR/git/gitconfig-vuppi $HOME/.gitconfig-vuppi
ln -s $DIR/git/gitignore $HOME/.gitignore

##################
# Needed folders #
##################

# Ensure that $HOME/bin exists
mkdir -p $HOME/bin

# Ensure that $HOME/config exists
mkdir -p $HOME/.config

######################
# Software and tools #
######################

# Kitty
rm -rf $HOME/.config/kitty
ln -s $DIR/kitty $HOME/.config/kitty

# zsh
rm -rf $HOME/.zprofile-custom
ln -s $DIR/zsh/zprofile-custom $HOME/.zprofile-custom

# Tmux
rm -rf $HOME/.tmux.conf
ln -s $DIR/tmux/tmux.conf $HOME/.tmux.conf

# Emacs
rm -rf $HOME/.emacs.d

# VIM
rm -rf $HOME/.vimrc
ln -s $DIR/vim/vimrc $HOME/.vimrc

# IdeaVIM
rm -rf $HOME/.ideavimrc
ln -s $DIR/vim/ideavimrc $HOME/.ideavimrc
ln -s $DIR/emacs/emacs.d $HOME/.emacs.d

# Neovim
rm -rf $HOME/.config/nvim
ln -s $DIR/nvim $HOME/.config/nvim

# PHPactor
rm -rf $HOME/.config/phpactor
ln -s $DIR/phpactor $HOME/.config/phpactor

# Binaries
rm -rf $HOME/bin/p
ln -s $DIR/bin/project-switcher $HOME/bin/p

#########
# Kitty #
#########

if [ ! -d /Applications/kitty.app ]; then
    echo "Kitty.app not found. Installing..."
    exec $DIR/setup-kitty
fi

##########################
# pkgx: https://pkgx.sh/ #
##########################

# Be sure that pkgx is installed
curl -Ssf https://pkgx.sh | sh

# Ripgrep (rg): https://github.com/BurntSushi/ripgrep
rm -rf $HOME/bin/rg
ln -s $DIR/bin/pkgx/ripgrep/rg $HOME/bin/rg

# fzf: https://github.com/junegunn/fzf
rm -rf $HOME/bin/fzf
ln -s $DIR/bin/pkgx/fzf/fzf $HOME/bin/fzf

# bun: https://bun.sh/
rm -rf $HOME/bin/bun
rm -rf $HOME/bin/bunx
ln -s $DIR/bin/pkgx/bun/bun $HOME/bin/bun
ln -s $DIR/bin/pkgx/bun/bunx $HOME/bin/bunx

# git
rm -rf $HOME/bin/git
rm -rf $HOME/bin/git-credential-osxkeychain
rm -rf $HOME/bin/git-cvsserver
rm -rf $HOME/bin/git-receive-pack
rm -rf $HOME/bin/git-shell
rm -rf $HOME/bin/git-upload-archive
rm -rf $HOME/bin/git-upload-pack
rm -rf $HOME/bin/scalar
ln -s $DIR/bin/pkgx/git-scm/git $HOME/bin/git
ln -s $DIR/bin/pkgx/git-scm/git-credential-osxkeychain $HOME/bin/git-credential-osxkeychain
ln -s $DIR/bin/pkgx/git-scm/git-cvsserver $HOME/bin/git-cvsserver
ln -s $DIR/bin/pkgx/git-scm/git-receive-pack $HOME/bin/git-receive-pack
ln -s $DIR/bin/pkgx/git-scm/git-shell $HOME/bin/git-shell
ln -s $DIR/bin/pkgx/git-scm/git-upload-archive $HOME/bin/git-upload-archive
ln -s $DIR/bin/pkgx/git-scm/git-upload-pack $HOME/bin/git-upload-pack
ln -s $DIR/bin/pkgx/git-scm/scalar $HOME/bin/scalar

# Python
rm -rf $HOME/bin/python
ln -s $DIR/bin/pkgx/python/python $HOME/bin/python

# Pip
rm -rf $HOME/bin/pip
ln -s $DIR/bin/pkgx/python/pip $HOME/bin/pip

# Youtube-dl
rm -rf $HOME/bin/youtube-dl
ln -s $DIR/bin/pkgx/youtube-dl/youtube-dl $HOME/bin/youtube-dl

# NeoVim
rm -rf $HOME/bin/nvim
ln -s $DIR/bin/pkgx/neovim/nvim $HOME/bin/nvim

# Node
rm -rf $HOME/bin/node
ln -s $DIR/bin/pkgx/nodejs/node $HOME/bin/node

# Tmux
rm -rf $HOME/bin/tmux
ln -s $DIR/bin/pkgx/tmux/tmux $HOME/bin/tmux
